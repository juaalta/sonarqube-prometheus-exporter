version: "3.8"

services:
  sonarqube:
    image: sonarqube:8.9-community
    expose:
      - 9000
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - sonarnet
    environment:
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - ../target/sonar-prometheus-exporter-1.1.0-SNAPSHOT.jar:/opt/sonarqube//extensions/plugins/sonar-prometheus-exporter-1.0.0-SNAPSHOT.jar

  db:
    image: postgres
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.30.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - sonarqube
    networks:
      - sonarnet
    restart: always

  grafana:
    image: grafana/grafana:8.1.5
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - sonarnet
    restart: always

networks:
  sonarnet:

volumes:
  sonarqube_conf:
  sonarqube_data:
  postgresql:
  postgresql_data:
  prometheus_data:
  grafana_data:
  